/**
 * @file system/KeyCode.hpp
 * @author JagYayu
 * @brief
 * @version 1.0
 * @date 2025
 *
 * @copyright Copyright (c) 2025 JagYayu. Licensed under MIT License.
 *
 */

#pragma once

#include "SDL3/SDL_keycode.h"

#include <cstdint>

namespace tudov
{
	enum class EKeyCode : std::uint32_t
	{
		Unknown = SDLK_UNKNOWN,                // '\0'
		Return = SDLK_RETURN,                  // '\r'
		Escape = SDLK_ESCAPE,                  // '\x1B'
		Backspace = SDLK_BACKSPACE,            // '\b'
		Tab = SDLK_TAB,                        // '\t'
		Space = SDLK_SPACE,                    // ' '
		Exclaim = SDLK_EXCLAIM,                // '!'
		DoubleApostrophe = SDLK_DBLAPOSTROPHE, // '"'
		Hash = SDLK_HASH,                      // '#'
		Dollar = SDLK_DOLLAR,                  // '$'
		Percent = SDLK_PERCENT,                // '%'
		Ampersand = SDLK_AMPERSAND,            // '&'
		Apostrophe = SDLK_APOSTROPHE,          // '''
		LeftParenthesis = SDLK_LEFTPAREN,      // '('
		RightParenthesis = SDLK_RIGHTPAREN,    // ')'
		Asterisk = SDLK_ASTERISK,              // '*'
		Plus = SDLK_PLUS,                      // '+'
		Comma = SDLK_COMMA,                    // ','
		Minus = SDLK_MINUS,                    // '-'
		Period = SDLK_PERIOD,                  // '.'
		Slash = SDLK_SLASH,                    // '/'
		Number0 = SDLK_0,                      // '0'
		Number1 = SDLK_1,                      // '1'
		Number2 = SDLK_2,                      // '2'
		Number3 = SDLK_3,                      // '3'
		Number4 = SDLK_4,                      // '4'
		Number5 = SDLK_5,                      // '5'
		Number6 = SDLK_6,                      // '6'
		Number7 = SDLK_7,                      // '7'
		Number8 = SDLK_8,                      // '8'
		Number9 = SDLK_9,                      // '9'
		Colon = SDLK_COLON,                    // ':'
		Semicolon = SDLK_SEMICOLON,            // ';'
		Less = SDLK_LESS,                      // '<'
		Equals = SDLK_EQUALS,                  // '='
		Greater = SDLK_GREATER,                // '>'
		Question = SDLK_QUESTION,              // '?'
		At = SDLK_AT,                          // '@'
		LeftBracket = SDLK_LEFTBRACKET,        // '['
		Backslash = SDLK_BACKSLASH,            // '\'
		RightBracket = SDLK_RIGHTBRACKET,      // ']'
		Caret = SDLK_CARET,                    // '^'
		Underscore = SDLK_UNDERSCORE,          // '_'
		Grave = SDLK_GRAVE,                    // '`'
		A = SDLK_A,
		B = SDLK_B,
		C = SDLK_C,
		D = SDLK_D,
		E = SDLK_E,
		F = SDLK_F,
		G = SDLK_G,
		H = SDLK_H,
		I = SDLK_I,
		J = SDLK_J,
		K = SDLK_K,
		L = SDLK_L,
		M = SDLK_M,
		N = SDLK_N,
		O = SDLK_O,
		P = SDLK_P,
		Q = SDLK_Q,
		R = SDLK_R,
		S = SDLK_S,
		T = SDLK_T,
		U = SDLK_U,
		V = SDLK_V,
		W = SDLK_W,
		X = SDLK_X,
		Y = SDLK_Y,
		Z = SDLK_Z,
		LeftBrace = SDLK_LEFTBRACE,   // '{'
		Pipe = SDLK_PIPE,             // '|'
		RightBrace = SDLK_RIGHTBRACE, // '}'
		Tilde = SDLK_TILDE,           // '~'
		Delete = SDLK_DELETE,         // '\x7F'
		PlusMinus = SDLK_PLUSMINUS,   // 'Â±'
		CapsLock = SDLK_CAPSLOCK,
		F1 = SDLK_F1,
		F2 = SDLK_F2,
		F3 = SDLK_F3,
		F4 = SDLK_F4,
		F5 = SDLK_F5,
		F6 = SDLK_F6,
		F7 = SDLK_F7,
		F8 = SDLK_F8,
		F9 = SDLK_F9,
		F10 = SDLK_F10,
		F11 = SDLK_F11,
		F12 = SDLK_F12,
		PrintScreen = SDLK_PRINTSCREEN,
		ScrollLock = SDLK_SCROLLLOCK,
		Pause = SDLK_PAUSE,
		Insert = SDLK_INSERT,
		Home = SDLK_HOME,
		PageUp = SDLK_PAGEUP,
		End = SDLK_END,
		PageDown = SDLK_PAGEDOWN,
		ArrowRight = SDLK_RIGHT,
		ArrowLeft = SDLK_LEFT,
		ArrowDown = SDLK_DOWN,
		ArrowUp = SDLK_UP,
		NumLockClear = SDLK_NUMLOCKCLEAR,
		KeypadDivide = SDLK_KP_DIVIDE,
		KeypadMultiply = SDLK_KP_MULTIPLY,
		KeypadMinus = SDLK_KP_MINUS,
		KeypadPlus = SDLK_KP_PLUS,
		KeypadEnter = SDLK_KP_ENTER,
		Keypad1 = SDLK_KP_1,
		Keypad2 = SDLK_KP_2,
		Keypad3 = SDLK_KP_3,
		Keypad4 = SDLK_KP_4,
		Keypad5 = SDLK_KP_5,
		Keypad6 = SDLK_KP_6,
		Keypad7 = SDLK_KP_7,
		Keypad8 = SDLK_KP_8,
		Keypad9 = SDLK_KP_9,
		Keypad0 = SDLK_KP_0,
		KeypadPeriod = SDLK_KP_PERIOD,
		Application = SDLK_APPLICATION,
		Power = SDLK_POWER,
		KeypadEquals = SDLK_KP_EQUALS,
		F13 = SDLK_F13,
		F14 = SDLK_F14,
		F15 = SDLK_F15,
		F16 = SDLK_F16,
		F17 = SDLK_F17,
		F18 = SDLK_F18,
		F19 = SDLK_F19,
		F20 = SDLK_F20,
		F21 = SDLK_F21,
		F22 = SDLK_F22,
		F23 = SDLK_F23,
		F24 = SDLK_F24,
		Execute = SDLK_EXECUTE,
		Help = SDLK_HELP,
		Menu = SDLK_MENU,
		Select = SDLK_SELECT,
		Stop = SDLK_STOP,
		Again = SDLK_AGAIN,
		Undo = SDLK_UNDO,
		Cut = SDLK_CUT,
		Copy = SDLK_COPY,
		Paste = SDLK_PASTE,
		Find = SDLK_FIND,
		Mute = SDLK_MUTE,
		VolumeUp = SDLK_VOLUMEUP,
		VolumeDown = SDLK_VOLUMEDOWN,
		KeypadComma = SDLK_KP_COMMA,
		KeypadEqualsAS400 = SDLK_KP_EQUALSAS400,
		AltErase = SDLK_ALTERASE,
		SystemRequest = SDLK_SYSREQ,
		Cancel = SDLK_CANCEL,
		Clear = SDLK_CLEAR,
		Prior = SDLK_PRIOR,
		Return2 = SDLK_RETURN2,
		Separator = SDLK_SEPARATOR,
		Out = SDLK_OUT,
		Oper = SDLK_OPER,
		ClearAgain = SDLK_CLEARAGAIN,
		CrSel = SDLK_CRSEL,
		ExSel = SDLK_EXSEL,
		Keypad00 = SDLK_KP_00,
		Keypad000 = SDLK_KP_000,
		ThousandsSeparator = SDLK_THOUSANDSSEPARATOR,
		DecimalSeparator = SDLK_DECIMALSEPARATOR,
		CurrencyUnit = SDLK_CURRENCYUNIT,
		CurrencySubunit = SDLK_CURRENCYSUBUNIT,
		KeypadLeftParenthesis = SDLK_KP_LEFTPAREN,
		KeypadRightParenthesis = SDLK_KP_RIGHTPAREN,
		KeypadLeftBrace = SDLK_KP_LEFTBRACE,
		KeypadRightBrace = SDLK_KP_RIGHTBRACE,
		KeypadTab = SDLK_KP_TAB,
		KeypadBackspace = SDLK_KP_BACKSPACE,
		KeypadA = SDLK_KP_A,
		KeypadB = SDLK_KP_B,
		KeypadC = SDLK_KP_C,
		KeypadD = SDLK_KP_D,
		KeypadE = SDLK_KP_E,
		KeypadF = SDLK_KP_F,
		KeypadXor = SDLK_KP_XOR,
		KeypadPower = SDLK_KP_POWER,
		KeypadPercent = SDLK_KP_PERCENT,
		KeypadLess = SDLK_KP_LESS,
		KeypadGreater = SDLK_KP_GREATER,
		KeypadAmpersand = SDLK_KP_AMPERSAND,
		KeypadDoubleAmpersand = SDLK_KP_DBLAMPERSAND,
		KeypadVerticalBar = SDLK_KP_VERTICALBAR,
		KeypadDoubleVerticalBar = SDLK_KP_DBLVERTICALBAR,
		KeypadColon = SDLK_KP_COLON,
		KeypadHash = SDLK_KP_HASH,
		KeypadSpace = SDLK_KP_SPACE,
		KeypadAt = SDLK_KP_AT,
		KeypadExclaim = SDLK_KP_EXCLAM,
		KeypadMemoryStore = SDLK_KP_MEMSTORE,
		KeypadMemoryRecall = SDLK_KP_MEMRECALL,
		KeypadMemoryClear = SDLK_KP_MEMCLEAR,
		KeypadMemoryAdd = SDLK_KP_MEMADD,
		KeypadMemorySubtract = SDLK_KP_MEMSUBTRACT,
		KeypadMemoryMultiply = SDLK_KP_MEMMULTIPLY,
		KeypadMemoryDivide = SDLK_KP_MEMDIVIDE,
		KeypadPlusMinus = SDLK_KP_PLUSMINUS,
		KeypadClear = SDLK_KP_CLEAR,
		KeypadClearEntry = SDLK_KP_CLEARENTRY,
		KeypadBinary = SDLK_KP_BINARY,
		KeypadOctal = SDLK_KP_OCTAL,
		KeypadDecimal = SDLK_KP_DECIMAL,
		KeypadHexadecimal = SDLK_KP_HEXADECIMAL,
		LeftCtrl = SDLK_LCTRL,
		LeftShift = SDLK_LSHIFT,
		LeftAlt = SDLK_LALT,
		LeftGui = SDLK_LGUI,
		RightCtrl = SDLK_RCTRL,
		RightShift = SDLK_RSHIFT,
		RightAlt = SDLK_RALT,
		RightGui = SDLK_RGUI,
		Mode = SDLK_MODE,
		Sleep = SDLK_SLEEP,
		Wake = SDLK_WAKE,
		ChannelIncrement = SDLK_CHANNEL_INCREMENT,
		ChannelDecrement = SDLK_CHANNEL_DECREMENT,
		MediaPlay = SDLK_MEDIA_PLAY,
		MediaPause = SDLK_MEDIA_PAUSE,
		MediaRecord = SDLK_MEDIA_RECORD,
		MediaFastForward = SDLK_MEDIA_FAST_FORWARD,
		MediaRewind = SDLK_MEDIA_REWIND,
		MediaNextTrack = SDLK_MEDIA_NEXT_TRACK,
		MediaPreviousTrack = SDLK_MEDIA_PREVIOUS_TRACK,
		MediaStop = SDLK_MEDIA_STOP,
		MediaEject = SDLK_MEDIA_EJECT,
		MediaPlayPause = SDLK_MEDIA_PLAY_PAUSE,
		MediaSelect = SDLK_MEDIA_SELECT,
		ApplicationCommandNew = SDLK_AC_NEW,
		ApplicationCommandOpen = SDLK_AC_OPEN,
		ApplicationCommandClose = SDLK_AC_CLOSE,
		ApplicationCommandExit = SDLK_AC_EXIT,
		ApplicationCommandSave = SDLK_AC_SAVE,
		ApplicationCommandPrint = SDLK_AC_PRINT,
		ApplicationCommandProperties = SDLK_AC_PROPERTIES,
		ApplicationCommandSearch = SDLK_AC_SEARCH,
		ApplicationCommandHome = SDLK_AC_HOME,
		ApplicationCommandBack = SDLK_AC_BACK,
		ApplicationCommandForward = SDLK_AC_FORWARD,
		ApplicationCommandStop = SDLK_AC_STOP,
		ApplicationCommandRefresh = SDLK_AC_REFRESH,
		ApplicationCommandBookmarks = SDLK_AC_BOOKMARKS,
		SoftLeft = SDLK_SOFTLEFT,
		SoftRight = SDLK_SOFTRIGHT,
		Call = SDLK_CALL,
		EndCall = SDLK_ENDCALL,
		LeftTab = SDLK_LEFT_TAB,
		Level5Shift = SDLK_LEVEL5_SHIFT,
		MultiKeyCompose = SDLK_MULTI_KEY_COMPOSE,
		LeftMeta = SDLK_LMETA,
		RightMeta = SDLK_RMETA,
		LeftHyper = SDLK_LHYPER,
		RightHyper = SDLK_RHYPER,
	};
} // namespace tudov