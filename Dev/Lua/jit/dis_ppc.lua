----------------------------------------------------------------------------
-- LuaJIT PPC disassembler module.
--
-- Copyright (C) 2005-2022 Mike Pall. All rights reserved.
-- Released under the MIT/X license. See Copyright Notice in luajit.h
----------------------------------------------------------------------------
local type=type;local a,b=string.byte,string.format;local c,d,e=string.match,string.gmatch,string.gsub;local f=table.concat;local g=require("bit")local h,i,j=g.band,g.bor,g.tohex;local k,l,m=g.lshift,g.rshift,g.arshift;local n={shift=1,mask=1023,[0]="mcrfXX",[33]="crnor|crnotCCC=",[129]="crandcCCC",[193]="crxor|crclrCCC%",[225]="crnandCCC",[257]="crandCCC",[289]="creqv|crsetCCC%",[417]="crorcCCC",[449]="cror|crmoveCCC=",[16]="b_lrKB",[528]="b_ctrKB",[150]="isync"}local o=setmetatable({shift=0,mask=-1},{__index=function(p,q)local r=h(l(q,11),31)local s=h(l(q,6),31)local t=h(l(q,1),31)if s==0 and t==31-r then return"slwiRR~A."elseif t==31 and s==32-r then return"srwiRR~-A."else return"rlwinmRR~AAA."end end})local u={shift=2,mask=7,[0]="rldiclRR~HM.","rldicrRR~HM.","rldicRR~HM.","rldimiRR~HM.",{shift=1,mask=1,[0]="rldclRR~RM.","rldcrRR~RM."}}local v=setmetatable({shift=1,mask=1023,[0]="cmp_YLRR",[32]="cmpl_YLRR",[4]="twARR",[68]="tdARR",[8]="subfcRRR.",[40]="subfRRR.",[104]="negRR.",[136]="subfeRRR.",[200]="subfzeRR.",[232]="subfmeRR.",[520]="subfcoRRR.",[552]="subfoRRR.",[616]="negoRR.",[648]="subfeoRRR.",[712]="subfzeoRR.",[744]="subfmeoRR.",[9]="mulhduRRR.",[73]="mulhdRRR.",[233]="mulldRRR.",[457]="divduRRR.",[489]="divdRRR.",[745]="mulldoRRR.",[969]="divduoRRR.",[1001]="divdoRRR.",[10]="addcRRR.",[138]="addeRRR.",[202]="addzeRR.",[234]="addmeRR.",[266]="addRRR.",[522]="addcoRRR.",[650]="addeoRRR.",[714]="addzeoRR.",[746]="addmeoRR.",[778]="addoRRR.",[11]="mulhwuRRR.",[75]="mulhwRRR.",[235]="mullwRRR.",[459]="divwuRRR.",[491]="divwRRR.",[747]="mullwoRRR.",[971]="divwouRRR.",[1003]="divwoRRR.",[15]="iselltRRR",[47]="iselgtRRR",[79]="iseleqRRR",[144]={shift=20,mask=1,[0]="mtcrfRZ~","mtocrfRZ~"},[19]={shift=20,mask=1,[0]="mfcrR","mfocrfRZ"},[371]={shift=11,mask=1023,[392]="mftbR",[424]="mftbuR"},[339]={shift=11,mask=1023,[32]="mferR",[256]="mflrR",[288]="mfctrR",[16]="mfspefscrR"},[467]={shift=11,mask=1023,[32]="mtxerR",[256]="mtlrR",[288]="mtctrR",[16]="mtspefscrR"},[20]="lwarxRR0R",[84]="ldarxRR0R",[21]="ldxRR0R",[53]="lduxRRR",[149]="stdxRR0R",[181]="stduxRRR",[341]="lwaxRR0R",[373]="lwauxRRR",[23]="lwzxRR0R",[55]="lwzuxRRR",[87]="lbzxRR0R",[119]="lbzuxRRR",[151]="stwxRR0R",[183]="stwuxRRR",[215]="stbxRR0R",[247]="stbuxRRR",[279]="lhzxRR0R",[311]="lhzuxRRR",[343]="lhaxRR0R",[375]="lhauxRRR",[407]="sthxRR0R",[439]="sthuxRRR",[54]="dcbst-R0R",[86]="dcbf-R0R",[150]="stwcxRR0R.",[214]="stdcxRR0R.",[246]="dcbtst-R0R",[278]="dcbt-R0R",[310]="eciwxRR0R",[438]="ecowxRR0R",[470]="dcbi-RR",[598]={shift=21,mask=3,[0]="sync","lwsync","ptesync"},[758]="dcba-RR",[854]="eieio",[982]="icbi-R0R",[1014]="dcbz-R0R",[26]="cntlzwRR~",[58]="cntlzdRR~",[122]="popcntbRR~",[154]="prtywRR~",[186]="prtydRR~",[28]="andRR~R.",[60]="andcRR~R.",[124]="nor|notRR~R=.",[284]="eqvRR~R.",[316]="xorRR~R.",[412]="orcRR~R.",[444]="or|mrRR~R=.",[476]="nandRR~R.",[508]="cmpbRR~R",[512]="mcrxrX",[532]="ldbrxRR0R",[660]="stdbrxRR0R",[533]="lswxRR0R",[597]="lswiRR0A",[661]="stswxRR0R",[725]="stswiRR0A",[534]="lwbrxRR0R",[662]="stwbrxRR0R",[790]="lhbrxRR0R",[918]="sthbrxRR0R",[535]="lfsxFR0R",[567]="lfsuxFRR",[599]="lfdxFR0R",[631]="lfduxFRR",[663]="stfsxFR0R",[695]="stfsuxFRR",[727]="stfdxFR0R",[759]="stfduxFR0R",[855]="lfiwaxFR0R",[983]="stfiwxFR0R",[24]="slwRR~R.",[27]="sldRR~R.",[536]="srwRR~R.",[792]="srawRR~R.",[824]="srawiRR~A.",[794]="sradRR~R.",[826]="sradiRR~H.",[827]="sradiRR~H.",[922]="extshRR~.",[954]="extsbRR~.",[986]="extswRR~.",[539]="srdRR~R."},{__index=function(p,q)if h(q,31)==15 then return"iselRRRC"end end})local w={shift=0,mask=3,[0]="ldRRE","lduRRE","lwaRRE"}local x={shift=0,mask=3,[0]="stdRRE","stduRRE"}local y={shift=5,mask=1,{shift=1,mask=15,[0]=false,false,"fdivsFFF.",false,"fsubsFFF.","faddsFFF.","fsqrtsF-F.",false,"fresF-F.","fmulsFF-F.","frsqrtesF-F.",false,"fmsubsFFFF~.","fmaddsFFFF~.","fnmsubsFFFF~.","fnmaddsFFFF~."}}local z={shift=5,mask=1,[0]={shift=1,mask=1023,[0]="fcmpuXFF",[32]="fcmpoXFF",[64]="mcrfsXX",[38]="mtfsb1A.",[70]="mtfsb0A.",[134]="mtfsfiA>>-A>",[8]="fcpsgnFFF.",[40]="fnegF-F.",[72]="fmrF-F.",[136]="fnabsF-F.",[264]="fabsF-F.",[12]="frspF-F.",[14]="fctiwF-F.",[15]="fctiwzF-F.",[583]="mffsF.",[711]="mtfsfZF.",[392]="frinF-F.",[424]="frizF-F.",[456]="fripF-F.",[488]="frimF-F.",[814]="fctidF-F.",[815]="fctidzF-F.",[846]="fcfidF-F."},{shift=1,mask=15,[0]=false,false,"fdivFFF.",false,"fsubFFF.","faddFFF.","fsqrtF-F.","fselFFFF~.","freF-F.","fmulFF-F.","frsqrteF-F.",false,"fmsubFFFF~.","fmaddFFFF~.","fnmsubFFFF~.","fnmaddFFFF~."}}local A={shift=0,mask=2047,[512]="evaddwRRR",[514]="evaddiwRAR~",[516]="evsubwRRR~",[518]="evsubiwRAR~",[520]="evabsRR",[521]="evnegRR",[522]="evextsbRR",[523]="evextshRR",[524]="evrndwRR",[525]="evcntlzwRR",[526]="evcntlswRR",[527]="brincRRR",[529]="evandRRR",[530]="evandcRRR",[534]="evxorRRR",[535]="evor|evmrRRR=",[536]="evnor|evnotRRR=",[537]="eveqvRRR",[539]="evorcRRR",[542]="evnandRRR",[544]="evsrwuRRR",[545]="evsrwsRRR",[546]="evsrwiuRRA",[547]="evsrwisRRA",[548]="evslwRRR",[550]="evslwiRRA",[552]="evrlwRRR",[553]="evsplatiRS",[554]="evrlwiRRA",[555]="evsplatfiRS",[556]="evmergehiRRR",[557]="evmergeloRRR",[558]="evmergehiloRRR",[559]="evmergelohiRRR",[560]="evcmpgtuYRR",[561]="evcmpgtsYRR",[562]="evcmpltuYRR",[563]="evcmpltsYRR",[564]="evcmpeqYRR",[632]="evselRRR",[633]="evselRRRW",[634]="evselRRRW",[635]="evselRRRW",[636]="evselRRRW",[637]="evselRRRW",[638]="evselRRRW",[639]="evselRRRW",[640]="evfsaddRRR",[641]="evfssubRRR",[644]="evfsabsRR",[645]="evfsnabsRR",[646]="evfsnegRR",[648]="evfsmulRRR",[649]="evfsdivRRR",[652]="evfscmpgtYRR",[653]="evfscmpltYRR",[654]="evfscmpeqYRR",[656]="evfscfuiR-R",[657]="evfscfsiR-R",[658]="evfscfufR-R",[659]="evfscfsfR-R",[660]="evfsctuiR-R",[661]="evfsctsiR-R",[662]="evfsctufR-R",[663]="evfsctsfR-R",[664]="evfsctuizR-R",[666]="evfsctsizR-R",[668]="evfststgtYRR",[669]="evfststltYRR",[670]="evfststeqYRR",[704]="efsaddRRR",[705]="efssubRRR",[708]="efsabsRR",[709]="efsnabsRR",[710]="efsnegRR",[712]="efsmulRRR",[713]="efsdivRRR",[716]="efscmpgtYRR",[717]="efscmpltYRR",[718]="efscmpeqYRR",[719]="efscfdR-R",[720]="efscfuiR-R",[721]="efscfsiR-R",[722]="efscfufR-R",[723]="efscfsfR-R",[724]="efsctuiR-R",[725]="efsctsiR-R",[726]="efsctufR-R",[727]="efsctsfR-R",[728]="efsctuizR-R",[730]="efsctsizR-R",[732]="efststgtYRR",[733]="efststltYRR",[734]="efststeqYRR",[736]="efdaddRRR",[737]="efdsubRRR",[738]="efdcfuidR-R",[739]="efdcfsidR-R",[740]="efdabsRR",[741]="efdnabsRR",[742]="efdnegRR",[744]="efdmulRRR",[745]="efddivRRR",[746]="efdctuidzR-R",[747]="efdctsidzR-R",[748]="efdcmpgtYRR",[749]="efdcmpltYRR",[750]="efdcmpeqYRR",[751]="efdcfsR-R",[752]="efdcfuiR-R",[753]="efdcfsiR-R",[754]="efdcfufR-R",[755]="efdcfsfR-R",[756]="efdctuiR-R",[757]="efdctsiR-R",[758]="efdctufR-R",[759]="efdctsfR-R",[760]="efdctuizR-R",[762]="efdctsizR-R",[764]="efdtstgtYRR",[765]="efdtstltYRR",[766]="efdtsteqYRR",[768]="evlddxRR0R",[769]="evlddRR8",[770]="evldwxRR0R",[771]="evldwRR8",[772]="evldhxRR0R",[773]="evldhRR8",[776]="evlhhesplatxRR0R",[777]="evlhhesplatRR2",[780]="evlhhousplatxRR0R",[781]="evlhhousplatRR2",[782]="evlhhossplatxRR0R",[783]="evlhhossplatRR2",[784]="evlwhexRR0R",[785]="evlwheRR4",[788]="evlwhouxRR0R",[789]="evlwhouRR4",[790]="evlwhosxRR0R",[791]="evlwhosRR4",[792]="evlwwsplatxRR0R",[793]="evlwwsplatRR4",[796]="evlwhsplatxRR0R",[797]="evlwhsplatRR4",[800]="evstddxRR0R",[801]="evstddRR8",[802]="evstdwxRR0R",[803]="evstdwRR8",[804]="evstdhxRR0R",[805]="evstdhRR8",[816]="evstwhexRR0R",[817]="evstwheRR4",[820]="evstwhoxRR0R",[821]="evstwhoRR4",[824]="evstwwexRR0R",[825]="evstwweRR4",[828]="evstwwoxRR0R",[829]="evstwwoRR4",[1027]="evmhessfRRR",[1031]="evmhossfRRR",[1032]="evmheumiRRR",[1033]="evmhesmiRRR",[1035]="evmhesmfRRR",[1036]="evmhoumiRRR",[1037]="evmhosmiRRR",[1039]="evmhosmfRRR",[1059]="evmhessfaRRR",[1063]="evmhossfaRRR",[1064]="evmheumiaRRR",[1065]="evmhesmiaRRR",[1067]="evmhesmfaRRR",[1068]="evmhoumiaRRR",[1069]="evmhosmiaRRR",[1071]="evmhosmfaRRR",[1095]="evmwhssfRRR",[1096]="evmwlumiRRR",[1100]="evmwhumiRRR",[1101]="evmwhsmiRRR",[1103]="evmwhsmfRRR",[1107]="evmwssfRRR",[1112]="evmwumiRRR",[1113]="evmwsmiRRR",[1115]="evmwsmfRRR",[1127]="evmwhssfaRRR",[1128]="evmwlumiaRRR",[1132]="evmwhumiaRRR",[1133]="evmwhsmiaRRR",[1135]="evmwhsmfaRRR",[1139]="evmwssfaRRR",[1144]="evmwumiaRRR",[1145]="evmwsmiaRRR",[1147]="evmwsmfaRRR",[1216]="evaddusiaawRR",[1217]="evaddssiaawRR",[1218]="evsubfusiaawRR",[1219]="evsubfssiaawRR",[1220]="evmraRR",[1222]="evdivwsRRR",[1223]="evdivwuRRR",[1224]="evaddumiaawRR",[1225]="evaddsmiaawRR",[1226]="evsubfumiaawRR",[1227]="evsubfsmiaawRR",[1280]="evmheusiaawRRR",[1281]="evmhessiaawRRR",[1283]="evmhessfaawRRR",[1284]="evmhousiaawRRR",[1285]="evmhossiaawRRR",[1287]="evmhossfaawRRR",[1288]="evmheumiaawRRR",[1289]="evmhesmiaawRRR",[1291]="evmhesmfaawRRR",[1292]="evmhoumiaawRRR",[1293]="evmhosmiaawRRR",[1295]="evmhosmfaawRRR",[1320]="evmhegumiaaRRR",[1321]="evmhegsmiaaRRR",[1323]="evmhegsmfaaRRR",[1324]="evmhogumiaaRRR",[1325]="evmhogsmiaaRRR",[1327]="evmhogsmfaaRRR",[1344]="evmwlusiaawRRR",[1345]="evmwlssiaawRRR",[1352]="evmwlumiaawRRR",[1353]="evmwlsmiaawRRR",[1363]="evmwssfaaRRR",[1368]="evmwumiaaRRR",[1369]="evmwsmiaaRRR",[1371]="evmwsmfaaRRR",[1408]="evmheusianwRRR",[1409]="evmhessianwRRR",[1411]="evmhessfanwRRR",[1412]="evmhousianwRRR",[1413]="evmhossianwRRR",[1415]="evmhossfanwRRR",[1416]="evmheumianwRRR",[1417]="evmhesmianwRRR",[1419]="evmhesmfanwRRR",[1420]="evmhoumianwRRR",[1421]="evmhosmianwRRR",[1423]="evmhosmfanwRRR",[1448]="evmhegumianRRR",[1449]="evmhegsmianRRR",[1451]="evmhegsmfanRRR",[1452]="evmhogumianRRR",[1453]="evmhogsmianRRR",[1455]="evmhogsmfanRRR",[1472]="evmwlusianwRRR",[1473]="evmwlssianwRRR",[1480]="evmwlumianwRRR",[1481]="evmwlsmianwRRR",[1491]="evmwssfanRRR",[1496]="evmwumianRRR",[1497]="evmwsmianRRR",[1499]="evmwsmfanRRR"}local B={[0]=false,false,"tdiARI","twiARI",A,false,false,"mulliRRI","subficRRI",false,"cmpl_iYLRU","cmp_iYLRI","addicRRI","addic.RRI","addi|liRR0I","addis|lisRR0I","b_KBJ","sc","bKJ",n,"rlwimiRR~AAA.",o,false,"rlwnmRR~RAA.","oriNRR~U","orisRR~U","xoriRR~U","xorisRR~U","andi.RR~U","andis.RR~U",u,v,"lwzRRD","lwzuRRD","lbzRRD","lbzuRRD","stwRRD","stwuRRD","stbRRD","stbuRRD","lhzRRD","lhzuRRD","lhaRRD","lhauRRD","sthRRD","sthuRRD","lmwRRD","stmwRRD","lfsFRD","lfsuFRD","lfdFRD","lfduFRD","stfsFRD","stfsuFRD","stfdFRD","stfduFRD",false,false,w,y,false,false,x,z}local C={[0]="r0","sp","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","r14","r15","r16","r17","r18","r19","r20","r21","r22","r23","r24","r25","r26","r27","r28","r29","r30","r31"}local D={[0]="lt","gt","eq","so","ge","le","ne","ns"}local function E(F)if F<=3 then return D[h(F,3)]else return b("4*cr%d+%s",l(F,2),D[h(F,3)])end end;local function G(H,I,J)local K=H.pos;local L=""if H.rel then local M=H.symtab[H.rel]if M then L="\t->"..M end end;if H.hexdump>0 then H.out(b("%08x  %s  %-7s %s%s\n",H.addr+K,j(H.op),I,f(J,", "),L))else H.out(b("%08x  %-7s %s%s\n",H.addr+K,I,f(J,", "),L))end;H.pos=K+4 end;local function N(H)return G(H,".long",{"0x"..j(H.op)})end;local function O(H)local K=H.pos;local P,Q,R,S=a(H.code,K+1,K+4)local T=i(k(P,24),k(Q,16),k(R,8),S)local J={}local U=nil;local V=21;H.op=T;H.rel=nil;local W=B[l(P,2)]while type(W)~="string"do if not W then return N(H)end;W=W[h(l(T,W.shift),W.mask)]end;local X,Y=c(W,"^([a-z0-9_.]*)(.*)")local Z,_=c(Y,"|([a-z0-9_.]*)(.*)")if Z then Y=_ end;for a0 in d(Y,".")do local q=nil;if a0=="R"then q=C[h(l(T,V),31)]V=V-5 elseif a0=="F"then q="f"..h(l(T,V),31)V=V-5 elseif a0=="A"then q=h(l(T,V),31)V=V-5 elseif a0=="S"then q=m(k(T,27-V),27)V=V-5 elseif a0=="I"then q=m(k(T,16),16)elseif a0=="U"then q=h(T,0xffff)elseif a0=="D"or a0=="E"then local a1=m(k(T,16),16)if a0=="E"then a1=h(a1,-4)end;if U=="r0"then U="0"end;J[#J]=b("%d(%s)",a1,U)elseif a0>="2"and a0<="8"then local a1=h(l(T,V),31)*a0;if U=="r0"then U="0"end;J[#J]=b("%d(%s)",a1,U)elseif a0=="H"then q=h(l(T,V),31)+k(h(T,2),4)V=V-5 elseif a0=="M"then q=h(l(T,V),31)+h(T,0x20)elseif a0=="C"then q=E(h(l(T,V),31))V=V-5 elseif a0=="B"then local a2=l(T,21)local F=h(l(T,16),31)local a3=""V=V-10;if h(a2,4)==0 then a3=h(a2,2)==0 and"dnz"or"dz"if h(a2,0x10)==0 then a3=a3 ..(h(a2,8)==0 and"f"or"t")end;if h(a2,0x10)==0 then q=E(F)end;X=X..(h(a2,1)==h(l(T,15),1)and"-"or"+")elseif h(a2,0x10)==0 then a3=D[h(F,3)+(h(a2,8)==0 and 4 or 0)]if F>3 then q="cr"..l(F,2)end;X=X..(h(a2,1)==h(l(T,15),1)and"-"or"+")end;X=e(X,"_",a3)elseif a0=="J"then q=m(k(T,27-V),29-V)*4;if h(T,2)==0 then q=H.addr+K+q end;H.rel=q;q="0x"..j(q)elseif a0=="K"then if h(T,1)~=0 then X=X.."l"end;if h(T,2)~=0 then X=X.."a"end elseif a0=="X"or a0=="Y"then q=h(l(T,V+2),7)if q==0 and a0=="Y"then q=nil else q="cr"..q end;V=V-5 elseif a0=="W"then q="cr"..h(T,7)elseif a0=="Z"then q=h(l(T,V-4),255)V=V-10 elseif a0==">"then J[#J]=l(J[#J],1)elseif a0=="0"then if U=="r0"then J[#J]=nil;if Z then X=Z end end elseif a0=="L"then X=e(X,"_",h(T,0x00200000)~=0 and"d"or"w")elseif a0=="."then if h(T,1)==1 then X=X.."."end elseif a0=="N"then if T==0x60000000 then X="nop"break end elseif a0=="~"then local a4=#J;J[a4-1],J[a4]=J[a4],J[a4-1]elseif a0=="="then local a4=#J;if U==J[a4-1]then J[a4]=nil;X=Z end elseif a0=="%"then local a4=#J;if U==J[a4-1]and U==J[a4-2]then J[a4]=nil;J[a4-1]=nil;X=Z end elseif a0=="-"then V=V-5 else assert(false)end;if q then J[#J+1]=q;U=q end end;return G(H,X,J)end;local function a5(H,a6,a7)if not a6 then a6=0 end;local a8=a7 and a6+a7 or#H.code;a8=a8-a8%4;H.pos=a6-a6%4;H.rel=nil;while H.pos<a8 do O(H)end end;local function a9(aa,ab,ac)local H={}H.code=aa;H.addr=ab or 0;H.out=ac or io.write;H.symtab={}H.disass=a5;H.hexdump=8;return H end;local function ad(aa,ab,ac)a9(aa,ab,ac):disass()end;local function ae(af)if af<32 then return C[af]end;return"f"..af-32 end;return{create=a9,disass=ad,regname=ae}