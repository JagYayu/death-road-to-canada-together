----------------------------------------------------------------------------
-- LuaJIT x86/x64 disassembler module.
--
-- Copyright (C) 2005-2022 Mike Pall. All rights reserved.
-- Released under the MIT license. See Copyright Notice in luajit.h
----------------------------------------------------------------------------
local type=type;local a,b,c=string.sub,string.byte,string.format;local d,e,f=string.match,string.gmatch,string.gsub;local g,h=string.lower,string.rep;local i=require("bit")local j=i.tohex;local k={[0]="addBmr","addVmr","addBrm","addVrm","addBai","addVai","push es","pop es","orBmr","orVmr","orBrm","orVrm","orBai","orVai","push cs","opc2*","adcBmr","adcVmr","adcBrm","adcVrm","adcBai","adcVai","push ss","pop ss","sbbBmr","sbbVmr","sbbBrm","sbbVrm","sbbBai","sbbVai","push ds","pop ds","andBmr","andVmr","andBrm","andVrm","andBai","andVai","es:seg","daa","subBmr","subVmr","subBrm","subVrm","subBai","subVai","cs:seg","das","xorBmr","xorVmr","xorBrm","xorVrm","xorBai","xorVai","ss:seg","aaa","cmpBmr","cmpVmr","cmpBrm","cmpVrm","cmpBai","cmpVai","ds:seg","aas","incVR","incVR","incVR","incVR","incVR","incVR","incVR","incVR","decVR","decVR","decVR","decVR","decVR","decVR","decVR","decVR","pushUR","pushUR","pushUR","pushUR","pushUR","pushUR","pushUR","pushUR","popUR","popUR","popUR","popUR","popUR","popUR","popUR","popUR","sz*pushaw,pusha","sz*popaw,popa","boundVrm","arplWmr","fs:seg","gs:seg","o16:","a16","pushUi","imulVrmi","pushBs","imulVrms","insb","insVS","outsb","outsVS","joBj","jnoBj","jbBj","jnbBj","jzBj","jnzBj","jbeBj","jaBj","jsBj","jnsBj","jpeBj","jpoBj","jlBj","jgeBj","jleBj","jgBj","arith!Bmi","arith!Vmi","arith!Bmi","arith!Vms","testBmr","testVmr","xchgBrm","xchgVrm","movBmr","movVmr","movBrm","movVrm","movVmg","leaVrm","movWgm","popUm","nop*xchgVaR|pause|xchgWaR|repne nop","xchgVaR","xchgVaR","xchgVaR","xchgVaR","xchgVaR","xchgVaR","xchgVaR","sz*cbw,cwde,cdqe","sz*cwd,cdq,cqo","call farViw","wait","sz*pushfw,pushf","sz*popfw,popf","sahf","lahf","movBao","movVao","movBoa","movVoa","movsb","movsVS","cmpsb","cmpsVS","testBai","testVai","stosb","stosVS","lodsb","lodsVS","scasb","scasVS","movBRi","movBRi","movBRi","movBRi","movBRi","movBRi","movBRi","movBRi","movVRI","movVRI","movVRI","movVRI","movVRI","movVRI","movVRI","movVRI","shift!Bmu","shift!Vmu","retBw","ret","vex*3$lesVrm","vex*2$ldsVrm","movBmi","movVmi","enterBwu","leave","retfBw","retf","int3","intBu","into","iretVS","shift!Bm1","shift!Vm1","shift!Bmc","shift!Vmc","aamBu","aadBu","salc","xlatb","fp*0","fp*1","fp*2","fp*3","fp*4","fp*5","fp*6","fp*7","loopneBj","loopeBj","loopBj","sz*jcxzBj,jecxzBj,jrcxzBj","inBau","inVau","outBua","outVua","callVj","jmpVj","jmp farViw","jmpBj","inBad","inVad","outBda","outVda","lock:","int1","repne:rep","rep:","hlt","cmc","testb!Bm","testv!Vm","clc","stc","cli","sti","cld","std","incb!Bm","incd!Vm"}assert(#k==255)local l=setmetatable({[0x06]=false,[0x07]=false,[0x0e]=false,[0x16]=false,[0x17]=false,[0x1e]=false,[0x1f]=false,[0x27]=false,[0x2f]=false,[0x37]=false,[0x3f]=false,[0x60]=false,[0x61]=false,[0x62]=false,[0x63]="movsxdVrDmt",[0x67]="a32:",[0x40]="rex*",[0x41]="rex*b",[0x42]="rex*x",[0x43]="rex*xb",[0x44]="rex*r",[0x45]="rex*rb",[0x46]="rex*rx",[0x47]="rex*rxb",[0x48]="rex*w",[0x49]="rex*wb",[0x4a]="rex*wx",[0x4b]="rex*wxb",[0x4c]="rex*wr",[0x4d]="rex*wrb",[0x4e]="rex*wrx",[0x4f]="rex*wrxb",[0x82]=false,[0x9a]=false,[0xc4]="vex*3",[0xc5]="vex*2",[0xce]=false,[0xd4]=false,[0xd5]=false,[0xd6]=false,[0xea]=false},{__index=k})local m={[0]="sldt!Dmp","sgdt!Ump","larVrm","lslVrm",nil,"syscall","clts","sysret","invd","wbinvd",nil,"ud1",nil,"$prefetch!Bm","femms","3dnowMrmu","movupsXrm|movssXrvm|movupdXrm|movsdXrvm","movupsXmr|movssXmvr|movupdXmr|movsdXmvr","movhlpsXrm$movlpsXrm|movsldupXrm|movlpdXrm|movddupXrm","movlpsXmr||movlpdXmr","unpcklpsXrvm||unpcklpdXrvm","unpckhpsXrvm||unpckhpdXrvm","movlhpsXrm$movhpsXrm|movshdupXrm|movhpdXrm","movhpsXmr||movhpdXmr","$prefetcht!Bm","hintnopVm","hintnopVm","hintnopVm","hintnopVm","hintnopVm","hintnopVm","hintnopVm","movUmx$","movUmy$","movUxm$","movUym$","movUmz$",nil,"movUzm$",nil,"movapsXrm||movapdXrm","movapsXmr||movapdXmr","cvtpi2psXrMm|cvtsi2ssXrvVmt|cvtpi2pdXrMm|cvtsi2sdXrvVmt","movntpsXmr|movntssXmr|movntpdXmr|movntsdXmr","cvttps2piMrXm|cvttss2siVrXm|cvttpd2piMrXm|cvttsd2siVrXm","cvtps2piMrXm|cvtss2siVrXm|cvtpd2piMrXm|cvtsd2siVrXm","ucomissXrm||ucomisdXrm","comissXrm||comisdXrm","wrmsr","rdtsc","rdmsr","rdpmc","sysenter","sysexit",nil,"getsec","opc3*38",nil,"opc3*3a",nil,nil,nil,nil,nil,"cmovoVrm","cmovnoVrm","cmovbVrm","cmovnbVrm","cmovzVrm","cmovnzVrm","cmovbeVrm","cmovaVrm","cmovsVrm","cmovnsVrm","cmovpeVrm","cmovpoVrm","cmovlVrm","cmovgeVrm","cmovleVrm","cmovgVrm","movmskpsVrXm$||movmskpdVrXm$","sqrtpsXrm|sqrtssXrm|sqrtpdXrm|sqrtsdXrm","rsqrtpsXrm|rsqrtssXrvm","rcppsXrm|rcpssXrvm","andpsXrvm||andpdXrvm","andnpsXrvm||andnpdXrvm","orpsXrvm||orpdXrvm","xorpsXrvm||xorpdXrvm","addpsXrvm|addssXrvm|addpdXrvm|addsdXrvm","mulpsXrvm|mulssXrvm|mulpdXrvm|mulsdXrvm","cvtps2pdXrm|cvtss2sdXrvm|cvtpd2psXrm|cvtsd2ssXrvm","cvtdq2psXrm|cvttps2dqXrm|cvtps2dqXrm","subpsXrvm|subssXrvm|subpdXrvm|subsdXrvm","minpsXrvm|minssXrvm|minpdXrvm|minsdXrvm","divpsXrvm|divssXrvm|divpdXrvm|divsdXrvm","maxpsXrvm|maxssXrvm|maxpdXrvm|maxsdXrvm","punpcklbwPrvm","punpcklwdPrvm","punpckldqPrvm","packsswbPrvm","pcmpgtbPrvm","pcmpgtwPrvm","pcmpgtdPrvm","packuswbPrvm","punpckhbwPrvm","punpckhwdPrvm","punpckhdqPrvm","packssdwPrvm","||punpcklqdqXrvm","||punpckhqdqXrvm","movPrVSm","movqMrm|movdquXrm|movdqaXrm","pshufwMrmu|pshufhwXrmu|pshufdXrmu|pshuflwXrmu","pshiftw!Pvmu","pshiftd!Pvmu","pshiftq!Mvmu||pshiftdq!Xvmu","pcmpeqbPrvm","pcmpeqwPrvm","pcmpeqdPrvm","emms*|","vmreadUmr||extrqXmuu$|insertqXrmuu$","vmwriteUrm||extrqXrm$|insertqXrm$",nil,nil,"||haddpdXrvm|haddpsXrvm","||hsubpdXrvm|hsubpsXrvm","movVSmMr|movqXrm|movVSmXr","movqMmr|movdquXmr|movdqaXmr","joVj","jnoVj","jbVj","jnbVj","jzVj","jnzVj","jbeVj","jaVj","jsVj","jnsVj","jpeVj","jpoVj","jlVj","jgeVj","jleVj","jgVj","setoBm","setnoBm","setbBm","setnbBm","setzBm","setnzBm","setbeBm","setaBm","setsBm","setnsBm","setpeBm","setpoBm","setlBm","setgeBm","setleBm","setgBm","push fs","pop fs","cpuid","btVmr","shldVmru","shldVmrc",nil,nil,"push gs","pop gs","rsm","btsVmr","shrdVmru","shrdVmrc","fxsave!Dmp","imulVrm","cmpxchgBmr","cmpxchgVmr","$lssVrm","btrVmr","$lfsVrm","$lgsVrm","movzxVrBmt","movzxVrWmt","|popcntVrm","ud2Dp","bt!Vmu","btcVmr","bsfVrm","bsrVrm|lzcntVrm|bsrWrm","movsxVrBmt","movsxVrWmt","xaddBmr","xaddVmr","cmppsXrvmu|cmpssXrvmu|cmppdXrvmu|cmpsdXrvmu","$movntiVmr|","pinsrwPrvWmu","pextrwDrPmu","shufpsXrvmu||shufpdXrvmu","$cmpxchg!Qmp","bswapVR","bswapVR","bswapVR","bswapVR","bswapVR","bswapVR","bswapVR","bswapVR","||addsubpdXrvm|addsubpsXrvm","psrlwPrvm","psrldPrvm","psrlqPrvm","paddqPrvm","pmullwPrvm","|movq2dqXrMm|movqXmr|movdq2qMrXm$","pmovmskbVrMm||pmovmskbVrXm","psubusbPrvm","psubuswPrvm","pminubPrvm","pandPrvm","paddusbPrvm","padduswPrvm","pmaxubPrvm","pandnPrvm","pavgbPrvm","psrawPrvm","psradPrvm","pavgwPrvm","pmulhuwPrvm","pmulhwPrvm","|cvtdq2pdXrm|cvttpd2dqXrm|cvtpd2dqXrm","$movntqMmr||$movntdqXmr","psubsbPrvm","psubswPrvm","pminswPrvm","porPrvm","paddsbPrvm","paddswPrvm","pmaxswPrvm","pxorPrvm","|||lddquXrm","psllwPrvm","pslldPrvm","psllqPrvm","pmuludqPrvm","pmaddwdPrvm","psadbwPrvm","maskmovqMrm||maskmovdquXrm$","psubbPrvm","psubwPrvm","psubdPrvm","psubqPrvm","paddbPrvm","paddwPrvm","padddPrvm","ud"}assert(m[255]=="ud")local n={["38"]={[0]="pshufbPrvm","phaddwPrvm","phadddPrvm","phaddswPrvm","pmaddubswPrvm","phsubwPrvm","phsubdPrvm","phsubswPrvm","psignbPrvm","psignwPrvm","psigndPrvm","pmulhrswPrvm","||permilpsXrvm","||permilpdXrvm",nil,nil,"||pblendvbXrma",nil,nil,nil,"||blendvpsXrma","||blendvpdXrma","||permpsXrvm","||ptestXrm","||broadcastssXrm","||broadcastsdXrm","||broadcastf128XrlXm",nil,"pabsbPrm","pabswPrm","pabsdPrm",nil,"||pmovsxbwXrm","||pmovsxbdXrm","||pmovsxbqXrm","||pmovsxwdXrm","||pmovsxwqXrm","||pmovsxdqXrm",nil,nil,"||pmuldqXrvm","||pcmpeqqXrvm","||$movntdqaXrm","||packusdwXrvm","||maskmovpsXrvm","||maskmovpdXrvm","||maskmovpsXmvr","||maskmovpdXmvr","||pmovzxbwXrm","||pmovzxbdXrm","||pmovzxbqXrm","||pmovzxwdXrm","||pmovzxwqXrm","||pmovzxdqXrm","||permdXrvm","||pcmpgtqXrvm","||pminsbXrvm","||pminsdXrvm","||pminuwXrvm","||pminudXrvm","||pmaxsbXrvm","||pmaxsdXrvm","||pmaxuwXrvm","||pmaxudXrvm","||pmulddXrvm","||phminposuwXrm",nil,nil,nil,"||psrlvVSXrvm","||psravdXrvm","||psllvVSXrvm",[0x58]="||pbroadcastdXrlXm",[0x59]="||pbroadcastqXrlXm",[0x5a]="||broadcasti128XrlXm",[0x78]="||pbroadcastbXrlXm",[0x79]="||pbroadcastwXrlXm",[0x8c]="||pmaskmovXrvVSm",[0x8e]="||pmaskmovVSmXvr",[0x96]="||fmaddsub132pHXrvm",[0x97]="||fmsubadd132pHXrvm",[0x98]="||fmadd132pHXrvm",[0x99]="||fmadd132sHXrvm",[0x9a]="||fmsub132pHXrvm",[0x9b]="||fmsub132sHXrvm",[0x9c]="||fnmadd132pHXrvm",[0x9d]="||fnmadd132sHXrvm",[0x9e]="||fnmsub132pHXrvm",[0x9f]="||fnmsub132sHXrvm",[0xa6]="||fmaddsub213pHXrvm",[0xa7]="||fmsubadd213pHXrvm",[0xa8]="||fmadd213pHXrvm",[0xa9]="||fmadd213sHXrvm",[0xaa]="||fmsub213pHXrvm",[0xab]="||fmsub213sHXrvm",[0xac]="||fnmadd213pHXrvm",[0xad]="||fnmadd213sHXrvm",[0xae]="||fnmsub213pHXrvm",[0xaf]="||fnmsub213sHXrvm",[0xb6]="||fmaddsub231pHXrvm",[0xb7]="||fmsubadd231pHXrvm",[0xb8]="||fmadd231pHXrvm",[0xb9]="||fmadd231sHXrvm",[0xba]="||fmsub231pHXrvm",[0xbb]="||fmsub231sHXrvm",[0xbc]="||fnmadd231pHXrvm",[0xbd]="||fnmadd231sHXrvm",[0xbe]="||fnmsub231pHXrvm",[0xbf]="||fnmsub231sHXrvm",[0xdc]="||aesencXrvm",[0xdd]="||aesenclastXrvm",[0xde]="||aesdecXrvm",[0xdf]="||aesdeclastXrvm",[0xf0]="|||crc32TrBmt",[0xf1]="|||crc32TrVmt",[0xf7]="| sarxVrmv| shlxVrmv| shrxVrmv"},["3a"]={[0x00]="||permqXrmu","||permpdXrmu","||pblenddXrvmu",nil,"||permilpsXrmu","||permilpdXrmu","||perm2f128Xrvmu",nil,"||roundpsXrmu","||roundpdXrmu","||roundssXrvmu","||roundsdXrvmu","||blendpsXrvmu","||blendpdXrvmu","||pblendwXrvmu","palignrPrvmu",nil,nil,nil,nil,"||pextrbVmXru","||pextrwVmXru","||pextrVmSXru","||extractpsVmXru","||insertf128XrvlXmu","||extractf128XlXmYru",nil,nil,nil,nil,nil,nil,"||pinsrbXrvVmu","||insertpsXrvmu","||pinsrXrvVmuS",nil,[0x38]="||inserti128Xrvmu",[0x39]="||extracti128XlXmYru",[0x40]="||dppsXrvmu",[0x41]="||dppdXrvmu",[0x42]="||mpsadbwXrvmu",[0x44]="||pclmulqdqXrvmu",[0x46]="||perm2i128Xrvmu",[0x4a]="||blendvpsXrvmb",[0x4b]="||blendvpdXrvmb",[0x4c]="||pblendvbXrvmb",[0x60]="||pcmpestrmXrmu",[0x61]="||pcmpestriXrmu",[0x62]="||pcmpistrmXrmu",[0x63]="||pcmpistriXrmu",[0xdf]="||aeskeygenassistXrmu",[0xf0]="||| rorxVrmu"}}local o={[0xc1]="vmcall",[0xc2]="vmlaunch",[0xc3]="vmresume",[0xc4]="vmxoff",[0xc8]="monitor",[0xc9]="mwait",[0xd8]="vmrun",[0xd9]="vmmcall",[0xda]="vmload",[0xdb]="vmsave",[0xdc]="stgi",[0xdd]="clgi",[0xde]="skinit",[0xdf]="invlpga",[0xf8]="swapgs",[0xf9]="rdtscp"}local p={[0]="faddFm","fmulFm","fcomFm","fcompFm","fsubFm","fsubrFm","fdivFm","fdivrFm","fldFm",nil,"fstFm","fstpFm","fldenvVm","fldcwWm","fnstenvVm","fnstcwWm","fiaddDm","fimulDm","ficomDm","ficompDm","fisubDm","fisubrDm","fidivDm","fidivrDm","fildDm","fisttpDm","fistDm","fistpDm",nil,"fld twordFmp",nil,"fstp twordFmp","faddGm","fmulGm","fcomGm","fcompGm","fsubGm","fsubrGm","fdivGm","fdivrGm","fldGm","fisttpQm","fstGm","fstpGm","frstorDmp",nil,"fnsaveDmp","fnstswWm","fiaddWm","fimulWm","ficomWm","ficompWm","fisubWm","fisubrWm","fidivWm","fidivrWm","fildWm","fisttpWm","fistWm","fistpWm","fbld twordFmp","fildQm","fbstp twordFmp","fistpQm","faddFf","fmulFf","fcomFf","fcompFf","fsubFf","fsubrFf","fdivFf","fdivrFf","fldFf","fxchFf",{"fnop"},nil,{"fchs","fabs",nil,nil,"ftst","fxam"},{"fld1","fldl2t","fldl2e","fldpi","fldlg2","fldln2","fldz"},{"f2xm1","fyl2x","fptan","fpatan","fxtract","fprem1","fdecstp","fincstp"},{"fprem","fyl2xp1","fsqrt","fsincos","frndint","fscale","fsin","fcos"},"fcmovbFf","fcmoveFf","fcmovbeFf","fcmovuFf",nil,{nil,"fucompp"},nil,nil,"fcmovnbFf","fcmovneFf","fcmovnbeFf","fcmovnuFf",{nil,nil,"fnclex","fninit"},"fucomiFf","fcomiFf",nil,"fadd toFf","fmul toFf",nil,nil,"fsub toFf","fsubr toFf","fdivr toFf","fdiv toFf","ffreeFf",nil,"fstFf","fstpFf","fucomFf","fucompFf",nil,nil,"faddpFf","fmulpFf",nil,{nil,"fcompp"},"fsubrpFf","fsubpFf","fdivrpFf","fdivpFf",nil,nil,nil,nil,{"fnstsw ax"},"fucomipFf","fcomipFf",nil}assert(p[126]=="fcomipFf")local q={arith={"add","or","adc","sbb","and","sub","xor","cmp"},shift={"rol","ror","rcl","rcr","shl","shr","sal","sar"},testb={"testBmi","testBmi","not","neg","mul","imul","div","idiv"},testv={"testVmi","testVmi","not","neg","mul","imul","div","idiv"},incb={"inc","dec"},incd={"inc","dec","callUmp","$call farDmp","jmpUmp","$jmp farDmp","pushUm"},sldt={"sldt","str","lldt","ltr","verr","verw"},sgdt={"vm*$sgdt","vm*$sidt","$lgdt","vm*$lidt","smsw",nil,"lmsw","vm*$invlpg"},bt={nil,nil,nil,nil,"bt","bts","btr","btc"},cmpxchg={nil,"sz*,cmpxchg8bQmp,cmpxchg16bXmp",nil,nil,nil,nil,"vmptrld|vmxon|vmclear","vmptrst"},pshiftw={nil,nil,"psrlw",nil,"psraw",nil,"psllw"},pshiftd={nil,nil,"psrld",nil,"psrad",nil,"pslld"},pshiftq={nil,nil,"psrlq",nil,nil,nil,"psllq"},pshiftdq={nil,nil,"psrlq","psrldq",nil,nil,"psllq","pslldq"},fxsave={"$fxsave","$fxrstor","$ldmxcsr","$stmxcsr",nil,"lfenceDp$","mfenceDp$","sfenceDp$clflush"},prefetch={"prefetch","prefetchw"},prefetcht={"prefetchnta","prefetcht0","prefetcht1","prefetcht2"}}local r={B={"al","cl","dl","bl","ah","ch","dh","bh","r8b","r9b","r10b","r11b","r12b","r13b","r14b","r15b"},B64={"al","cl","dl","bl","spl","bpl","sil","dil","r8b","r9b","r10b","r11b","r12b","r13b","r14b","r15b"},W={"ax","cx","dx","bx","sp","bp","si","di","r8w","r9w","r10w","r11w","r12w","r13w","r14w","r15w"},D={"eax","ecx","edx","ebx","esp","ebp","esi","edi","r8d","r9d","r10d","r11d","r12d","r13d","r14d","r15d"},Q={"rax","rcx","rdx","rbx","rsp","rbp","rsi","rdi","r8","r9","r10","r11","r12","r13","r14","r15"},M={"mm0","mm1","mm2","mm3","mm4","mm5","mm6","mm7","mm0","mm1","mm2","mm3","mm4","mm5","mm6","mm7"},X={"xmm0","xmm1","xmm2","xmm3","xmm4","xmm5","xmm6","xmm7","xmm8","xmm9","xmm10","xmm11","xmm12","xmm13","xmm14","xmm15"},Y={"ymm0","ymm1","ymm2","ymm3","ymm4","ymm5","ymm6","ymm7","ymm8","ymm9","ymm10","ymm11","ymm12","ymm13","ymm14","ymm15"}}local s={"es","cs","ss","ds","fs","gs","segr6","segr7"}local t={B=1,W=2,D=4,Q=8,M=8,X=16,Y=32}local u={B="byte",W="word",D="dword",Q="qword",M="qword",X="xword",Y="yword",F="dword",G="qword"}local function v(w,x,y)local z,A,B=w.code,w.pos,""local C=w.hexdump;if C>0 then for D=w.start,A-1 do B=B..c("%02X",b(z,D,D))end;if#B>C then B=a(B,1,C)..". "else B=B..h(" ",C-#B+2)end end;if y then x=x.." "..y end;if w.o16 then x="o16 "..x;w.o16=false end;if w.a32 then x="a32 "..x;w.a32=false end;if w.rep then x=w.rep.." "..x;w.rep=false end;if w.rex then local E=(w.rexw and"w"or"")..(w.rexr and"r"or"")..(w.rexx and"x"or"")..(w.rexb and"b"or"")..(w.vexl and"l"or"")if w.vexv and w.vexv~=0 then E=E.."v"..w.vexv end;if E~=""then x=w.rex.."."..E.." "..f(x,"^ ","")elseif w.rex=="vex"then x=f("v"..x,"^v ","")end;w.rexw=false;w.rexr=false;w.rexx=false;w.rexb=false;w.rex=false;w.vexl=false;w.vexv=false end;if w.seg then local F,G=f(x,"%[","["..w.seg..":")if G==0 then x=w.seg.." "..x else x=F end;w.seg=false end;if w.lock then x="lock "..x;w.lock=false end;local H=w.imm;if H then local I=w.symtab[H]if I then x=x.."\t->"..I end end;w.out(c("%08x  %s%s\n",w.addr+w.start,B,x))w.mrm=false;w.vexv=false;w.start=A;w.imm=nil end;local function J(w)w.o16=false;w.seg=false;w.lock=false;w.rep=false;w.rexw=false;w.rexr=false;w.rexx=false;w.rexb=false;w.rex=false;w.a32=false;w.vexl=false end;local function K(w)w.pos=w.stop+1;J(w)return v(w,"(incomplete)")end;local function L(w)J(w)return v(w,"(unknown)")end;local function M(w,A,G)if A+G-1>w.stop then return K(w)end;local z=w.code;if G==1 then local N=b(z,A,A)return N elseif G==2 then local N,O=b(z,A,A+1)return N+O*256 else local N,O,P,Q=b(z,A,A+3)local H=N+O*256+P*65536+Q*16777216;w.imm=H;return H end end;local function R(w,S,T)local y,U,V,W,X,Y,Z,_,a0;local z,A,a1,a2=w.code,w.pos,w.stop,w.vexl;for a3 in e(T,".")do local a4=nil;if a3=="V"or a3=="U"then if w.rexw then V="Q"w.rexw=false elseif w.o16 then V="W"w.o16=false elseif a3=="U"and w.x64 then V="Q"else V="D"end;U=r[V]elseif a3=="T"then if w.rexw then V="Q"w.rexw=false else V="D"end;U=r[V]elseif a3=="B"then V="B"U=w.rex and r.B64 or r.B elseif d(a3,"[WDQMXYFG]")then V=a3;if V=="X"and a2 then V="Y"w.vexl=false end;U=r[V]elseif a3=="P"then V=w.o16 and"X"or"M"w.o16=false;if V=="X"and a2 then V="Y"w.vexl=false end;U=r[V]elseif a3=="H"then S=S..(w.rexw and"d"or"s")w.rexw=false elseif a3=="S"then S=S..g(V)elseif a3=="s"then local H=M(w,A,1)if not H then return end;a4=H<=127 and c("+0x%02x",H)or c("-0x%02x",256-H)A=A+1 elseif a3=="u"then local H=M(w,A,1)if not H then return end;a4=c("0x%02x",H)A=A+1 elseif a3=="b"then local H=M(w,A,1)if not H then return end;a4=U[H/16+1]A=A+1 elseif a3=="w"then local H=M(w,A,2)if not H then return end;a4=c("0x%x",H)A=A+2 elseif a3=="o"then if w.x64 then local a5=M(w,A,4)if not a5 then return end;local a6=M(w,A+4,4)if not a6 then return end;a4=c("[0x%08x%08x]",a6,a5)A=A+8 else local H=M(w,A,4)if not H then return end;a4=c("[0x%08x]",H)A=A+4 end elseif a3=="i"or a3=="I"then local G=t[V]if G==8 and w.x64 and a3=="I"then local a5=M(w,A,4)if not a5 then return end;local a6=M(w,A+4,4)if not a6 then return end;a4=c("0x%08x%08x",a6,a5)else if G==8 then G=4 end;local H=M(w,A,G)if not H then return end;if V=="Q"and(H<0 or H>0x7fffffff)then H=0xffffffff+1-H;a4=c(H>65535 and"-0x%08x"or"-0x%x",H)else a4=c(H>65535 and"0x%08x"or"0x%x",H)end end;A=A+G elseif a3=="j"then local G=t[V]if G==8 then G=4 end;local H=M(w,A,G)if not H then return end;if V=="B"and H>127 then H=H-256 elseif H>2147483647 then H=H-4294967296 end;A=A+G;H=H+A+w.addr;if H>4294967295 and not w.x64 then H=H-4294967296 end;w.imm=H;if V=="W"then a4=c("word 0x%04x",H%65536)elseif w.x64 then local a7=H%0x1000000;a4=c("0x%02x%06x",(H-a7)/0x1000000,a7)else a4="0x"..j(H)end elseif a3=="R"then local a8=b(z,A-1,A-1)%8;if w.rexb then a8=a8+8;w.rexb=false end;a4=U[a8+1]elseif a3=="a"then a4=U[1]elseif a3=="c"then a4="cl"elseif a3=="d"then a4="dx"elseif a3=="1"then a4="1"else if not W then W=w.mrm;if not W then if A>a1 then return K(w)end;W=b(z,A,A)A=A+1 end;Y=W%8;W=(W-Y)/8;X=W%8;W=(W-X)/8;a0=""if W<3 then if Y==4 then if A>a1 then return K(w)end;Z=b(z,A,A)A=A+1;Y=Z%8;Z=(Z-Y)/8;_=Z%8;Z=(Z-_)/8;if w.rexx then _=_+8;w.rexx=false end;if _==4 then _=nil end end;if W>0 or Y==5 then local a9=W;if a9~=1 then a9=4 end;local aa=M(w,A,a9)if not aa then return end;if W==0 then Y=nil end;if Y or _ or not Z and w.x64 and not w.a32 then if a9==1 and aa>127 then a0=c("-0x%x",256-aa)elseif aa>=0 and aa<=0x7fffffff then a0=c("+0x%x",aa)else a0=c("-0x%x",0xffffffff+1-aa)end else a0=c(w.x64 and not w.a32 and not(aa>=0 and aa<=0x7fffffff)and"0xffffffff%08x"or"0x%08x",aa)end;A=A+a9 end end;if Y and w.rexb then Y=Y+8;w.rexb=false end;if w.rexr then X=X+8;w.rexr=false end end;if a3=="m"then if W==3 then a4=U[Y+1]else local ab=w.a32 and r.D or w.aregs;local ac,ad="",""if Y then ac=ab[Y+1]elseif not Z and w.x64 and not w.a32 then ac="rip"end;w.a32=false;if _ then if Y then ac=ac.."+"end;ad=ab[_+1]if Z>0 then ad=ad.."*"..2^Z end end;a4=c("[%s%s%s]",ac,ad,a0)end;if W<3 and(not d(T,"[aRrgp]")or d(T,"t"))then a4=u[V].." "..a4 end elseif a3=="r"then a4=U[X+1]elseif a3=="g"then a4=s[X+1]elseif a3=="p"then elseif a3=="f"then a4="st"..Y elseif a3=="x"then if X==0 and w.lock and not w.x64 then a4="CR8"w.lock=false else a4="CR"..X end elseif a3=="v"then if w.vexv then a4=U[w.vexv+1]w.vexv=false end elseif a3=="y"then a4="DR"..X elseif a3=="z"then a4="TR"..X elseif a3=="l"then a2=false elseif a3=="t"then else error("bad pattern `"..T.."'")end end;if a4 then y=y and y..", "..a4 or a4 end end;w.pos=A;return v(w,S,y)end;local ae;local function af(w)local ag=w.mrm;if not ag then local A=w.pos;if A>w.stop then return nil end;ag=b(w.code,A,A)w.pos=A+1;w.mrm=ag end;return ag end;local function ah(w,ai,aj)if not ai then return L(w)end;if d(ai,"%|")then local a3;if w.rep then a3=w.rep=="rep"and"%|([^%|]*)"or"%|[^%|]*%|[^%|]*%|([^%|]*)"w.rep=false elseif w.o16 then a3="%|[^%|]*%|([^%|]*)"w.o16=false else a3="^[^%|]*"end;ai=d(ai,a3)if not ai then return L(w)end end;if d(ai,"%$")then local ag=af(w)if not ag then return K(w)end;ai=d(ai,ag>=192 and"^[^%$]*"or"%$(.*)")if ai==""then return L(w)end end;if ai==""then return L(w)end;local S,T=d(ai,"^([a-z0-9 ]*)(.*)")if T==""and aj then T=aj end;return ae[a(T,1,1)](w,S,T)end;local function ak(w,al)local A=w.pos;local ai=al[b(w.code,A,A)]A=A+1;w.pos=A;return ah(w,ai)end;ae={[""]=function(w,S,T)return v(w,S)end,B=R,W=R,D=R,Q=R,V=R,U=R,T=R,M=R,X=R,P=R,F=R,G=R,Y=R,H=R,[":"]=function(w,S,T)w[T==":"and S or a(T,2)]=S;if w.pos-w.start>5 then return L(w)end end,["*"]=function(w,S,T)return ae[S](w,S,a(T,2))end,["!"]=function(w,S,T)local ag=af(w)if not ag then return K(w)end;return ah(w,q[S][(ag-ag%8)/8%8+1],a(T,2))end,sz=function(w,S,T)if w.o16 then w.o16=false else T=d(T,",(.*)")if w.rexw then local a3=d(T,",(.*)")if a3 then T=a3;w.rexw=false end end end;T=d(T,"^[^,]*")return ah(w,T)end,opc2=function(w,S,T)return ak(w,m)end,opc3=function(w,S,T)return ak(w,n[T])end,vm=function(w,S,T)return ah(w,o[w.mrm])end,fp=function(w,S,T)local ag=af(w)if not ag then return K(w)end;local Y=ag%8;local am=T*8+(ag-Y)/8%8;if ag>=192 then am=am+64 end;local ai=p[am]if type(ai)=="table"then ai=ai[Y+1]end;return ah(w,ai)end,rex=function(w,S,T)if w.rex then return L(w)end;for a3 in e(T,".")do w["rex"..a3]=true end;w.rex="rex"end,vex=function(w,S,T)if w.rex then return L(w)end;w.rex="vex"local A=w.pos;if w.mrm then w.mrm=nil;A=A-1 end;local an=b(w.code,A,A)if not an then return K(w)end;A=A+1;if an<128 then w.rexr=true end;local ao=1;if T=="3"then ao=an%32;an=(an-ao)/32;local ap=an%2;an=(an-ap)/2;if ap==0 then w.rexb=true end;local aq=an%2;if aq==0 then w.rexx=true end;an=b(w.code,A,A)if not an then return K(w)end;A=A+1;if an>=128 then w.rexw=true end end;w.pos=A;local ar;if ao==1 then ar=m elseif ao==2 then ar=n["38"]elseif ao==3 then ar=n["3a"]else return L(w)end;local a3=an%4;an=(an-a3)/4;if a3==1 then w.o16="o16"elseif a3==2 then w.rep="rep"elseif a3==3 then w.rep="repne"end;local as=an%2;an=(an-as)/2;if as~=0 then w.vexl=true end;w.vexv=(-1-an)%16;return ak(w,ar)end,nop=function(w,S,T)return ah(w,w.rex and T or"nop")end,emms=function(w,S,T)if w.rex~="vex"then return v(w,"emms")elseif w.vexl then w.vexl=false;return v(w,"zeroall")else return v(w,"zeroupper")end end}local function at(w,au,av)if not au then au=0 end;local a1=av and au+av or#w.code;au=au+1;w.start=au;w.pos=au;w.stop=a1;w.imm=nil;w.mrm=false;J(w)while w.pos<=a1 do ak(w,w.map1)end;if w.pos~=w.start then K(w)end end;local function aw(z,ax,ay)local w={}w.code=z;w.addr=(ax or 0)-1;w.out=ay or io.write;w.symtab={}w.disass=at;w.hexdump=16;w.x64=false;w.map1=k;w.aregs=r.D;return w end;local function az(z,ax,ay)local w=aw(z,ax,ay)w.x64=true;w.map1=l;w.aregs=r.Q;return w end;local function aA(z,ax,ay)aw(z,ax,ay):disass()end;local function aB(z,ax,ay)az(z,ax,ay):disass()end;local function aC(a8)if a8<8 then return r.D[a8+1]end;return r.X[a8-7]end;local function aD(a8)if a8<16 then return r.Q[a8+1]end;return r.X[a8-15]end;return{create=aw,create64=az,disass=aA,disass64=aB,regname=aC,regname64=aD}