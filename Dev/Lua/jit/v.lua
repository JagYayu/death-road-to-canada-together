----------------------------------------------------------------------------
-- Verbose mode of the LuaJIT compiler.
--
-- Copyright (C) 2005-2022 Mike Pall. All rights reserved.
-- Released under the MIT license. See Copyright Notice in luajit.h
----------------------------------------------------------------------------
local a=require("jit")assert(a.version_num==20100,"LuaJIT core/library version mismatch")local b=require("jit.util")local c=require("jit.vmdef")local d,e=b.funcinfo,b.traceinfo;local type,f=type,string.format;local g,h=io.stdout,io.stderr;local i,j;local k,l;local function m(n,o)local p=d(n,o)if p.loc then return p.loc elseif p.ffid then return c.ffnames[p.ffid]elseif p.addr then return f("C:%x",p.addr)else return"(?)"end end;local function q(r,s)if type(r)=="number"then if type(s)=="function"then s=m(s)end;r=f(c.traceerr[r],s)end;return r end;local function t(u,v,n,o,w,x)if u=="start"then k=m(n,o)l=w and"("..w.."/"..(x==-1 and"stitch"or x)..") "or""else if u=="abort"then local y=m(n,o)if y~=k then j:write(f("[TRACE --- %s%s -- %s at %s]\n",l,k,q(w,x),y))else j:write(f("[TRACE --- %s%s -- %s]\n",l,k,q(w,x)))end elseif u=="stop"then local s=e(v)local z,A=s.link,s.linktype;if A=="interpreter"then j:write(f("[TRACE %3s %s%s -- fallback to interpreter]\n",v,l,k))elseif A=="stitch"then j:write(f("[TRACE %3s %s%s %s %s]\n",v,l,k,A,m(n,o)))elseif z==v or z==0 then j:write(f("[TRACE %3s %s%s %s]\n",v,l,k,A))elseif A=="root"then j:write(f("[TRACE %3s %s%s -> %d]\n",v,l,k,z))else j:write(f("[TRACE %3s %s%s -> %d %s]\n",v,l,k,z,A))end else j:write(f("[TRACE %s]\n",u))end;j:flush()end end;local function B()if i then i=false;a.attach(t)if j and j~=g and j~=h then j:close()end;j=nil end end;local function C(D)if i then B()end;if not D then D=os.getenv("LUAJIT_VERBOSEFILE")end;if D then j=D=="-"and g or assert(io.open(D,"w"))else j=h end;a.attach(t,"trace")i=true end;return{on=C,off=B,start=C}