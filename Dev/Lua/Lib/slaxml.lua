--[=====================================================================[
v0.8 Copyright Â© 2013-2018 Gavin Kistner <!@phrogz.net>; MIT Licensed
See http://github.com/Phrogz/SLAXML for details.
--]=====================================================================]
local a={VERSION="0.8",_call={pi=function(b,c)print(string.format("<?%s %s?>",b,c))end,comment=function(c)print(string.format("<!-- %s -->",c))end,startElement=function(d,e,f)io.write("<")if f then io.write(f,":")end;io.write(d)if e then io.write(" (ns='",e,"')")end;print(">")end,attribute=function(d,g,e,f)io.write('  ')if f then io.write(f,":")end;io.write(d,'=',string.format('%q',g))if e then io.write(" (ns='",e,"')")end;io.write("\n")end,text=function(h,i)print(string.format("  %s: %q",i and'cdata'or'text',h))end,closeElement=function(d,e,f)io.write("</")if f then io.write(f,":")end;print(d..">")end}}function a:parser(j)return{_call=j or self._call,parse=a.parse}end;function a:parse(k,l)if not l then l={stripWhitespace=false}end;local m,n,o,p,q,r,s=string.find,string.sub,string.gsub,string.char,table.insert,table.remove,table.concat;local t,u,v,w,x,y,e;local unpack=unpack or table.unpack;local z=1;local A="text"local B=1;local C={}local D={}local E;local F={}local G=false;local H={{0x7FF,192},{0xFFFF,224},{0x1FFFFF,240}}local function I(J)if J<128 then return p(J)end;local K={}for L,M in ipairs(H)do if J<=M[1]then for N=L+1,2,-1 do local O=J%64;J=(J-O)/64;K[N]=p(128+O)end;K[1]=p(M[2]+J)return s(K)end end end;local P={["lt"]="<",["gt"]=">",["amp"]="&",["quot"]='"',["apos"]="'"}local Q=function(R,S,T)return P[T]or S=="#"and I(tonumber('0'..T))or R end;local function U(V)return o(V,'(&(#?)([%d%a]+);)',Q)end;local function W()if t>B and self._call.text then local h=n(k,B,t-1)if l.stripWhitespace then h=o(h,'^%s+','')h=o(h,'%s+$','')if#h==0 then h=nil end end;if h then self._call.text(U(h),false)end end end;local function X()t,u,v,w=m(k,'^<%?([:%a_][:%w_.-]*) ?(.-)%?>',z)if t then W()if self._call.pi then self._call.pi(v,w)end;z=u+1;B=z;return true end end;local function Y()t,u,v=m(k,'^<!%-%-(.-)%-%->',z)if t then W()if self._call.comment then self._call.comment(v)end;z=u+1;B=z;return true end end;local function Z(_)if _=='xml'then return'http://www.w3.org/XML/1998/namespace'end;for a0=#F,1,-1 do if F[a0][_]then return F[a0][_]end end;error(("Cannot find namespace for prefix %s"):format(_))end;local function a1()G=true;t,u,v=m(k,'^<([%a_][%w_.-]*)',z)if t then C[2]=nil;C[3]=nil;W()z=u+1;t,u,w=m(k,'^:([%a_][%w_.-]*)',z)if t then C[1]=w;C[3]=v;v=w;z=u+1 else C[1]=v;for a0=#F,1,-1 do if F[a0]['!']then C[2]=F[a0]['!']break end end end;E=0;q(F,{})return true end end;local function a2()t,u,v=m(k,'^%s+([:%a_][:%w_.-]*)%s*=%s*',z)if t then y=u+1;t,u,w=m(k,'^"([^<"]*)"',y)if t then z=u+1;w=U(w)else t,u,w=m(k,"^'([^<']*)'",y)if t then z=u+1;w=U(w)end end end;if v and w then local a3={v,w}local _,d=string.match(v,'^([^:]+):([^:]+)$')if _ then if _=='xmlns'then F[#F][d]=w else a3[1]=d;a3[4]=_ end else if v=='xmlns'then F[#F]['!']=w;C[2]=w end end;E=E+1;D[E]=a3;return true end end;local function a4()t,u,v=m(k,'^<!%[CDATA%[(.-)%]%]>',z)if t then W()if self._call.text then self._call.text(v,true)end;z=u+1;B=z;return true end end;local function a5()t,u,v=m(k,'^%s*(/?)>',z)if t then A="text"z=u+1;B=z;if C[3]then C[2]=Z(C[3])end;if self._call.startElement then self._call.startElement(unpack(C))end;if self._call.attribute then for a0=1,E do if D[a0][4]then D[a0][3]=Z(D[a0][4])end;self._call.attribute(unpack(D[a0]))end end;if v=="/"then r(F)if self._call.closeElement then self._call.closeElement(unpack(C))end end;return true end end;local function a6()t,u,v,w=m(k,'^</([%a_][%w_.-]*)%s*>',z)if t then e=nil;for a0=#F,1,-1 do if F[a0]['!']then e=F[a0]['!']break end end else t,u,w,v=m(k,'^</([%a_][%w_.-]*):([%a_][%w_.-]*)%s*>',z)if t then e=Z(w)end end;if t then W()if self._call.closeElement then self._call.closeElement(v,e)end;z=u+1;B=z;r(F)return true end end;while z<#k do if A=="text"then if not(X()or Y()or a4()or a6())then if a1()then A="attributes"else t,u=m(k,'^[^<]+',z)z=(t and u or z)+1 end end elseif A=="attributes"then if not a2()then if not a5()then error("Was in an element and couldn't find attributes or the close.")end end end end;if not G then error("Parsing did not discover any elements")end;if#F>0 then error("Parsing ended with unclosed elements")end end;return a